{"version":3,"sources":["components/Header.js","actions/action.js","components/SearchData.js","App.js","serviceWorker.js","reducers/userReducer.js","index.js","store/configStore.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onRemove","e","id","target","getAttribute","deleteUser","parseInt","state","name","users","isLoading","isLoaded","sortedUsers","prevProps","prevState","length","sorted","filter","user","indexOf","setState","_this2","react_default","a","createElement","className","map","i","key","gender","data-id","onClick","React","Component","connect","user_details","dispatch","type","SearchData","onChangeHandler","value","onChange","components_Header","App","toggleSearch","toggled","toggleAddUser","AddUserToggle","formSubmit","preventDefault","username","formdata","addUser","inputChange","objectSpread","selectChange","console","log","onSubmit","required","components_SearchData","nextProps","Boolean","window","location","hostname","match","initialState","added_count","filters","userChecked","usersSorted","userReducer","arguments","undefined","action","concat","checker","sampleUsers","store","createStore","combineReducers","subscribe","getState","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7731feaa.chunk.js","sourcesContent":["import React from 'react';\r\n//import data from './user.json';\r\nimport { connect } from 'react-redux';\r\nimport { deleteUser } from '../actions/action';\r\n\r\nclass Header extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\t'name': props.name ? props.name : '',\r\n\t\t\t'users': props.users ? props.users : [],\r\n\t\t\t'isLoading': false,\r\n\t\t\t'isLoaded': false,\r\n\t\t\t'sortedUsers': []\r\n\t\t};\r\n\t}\r\n\r\n\t// componentDidUpdate(prevProps, prevState) {\r\n\t// \tconsole.log(\"update\");\r\n\t// \t// if (prevProps.name !== this.props.name) {\r\n\t// \t// \tconsole.log(\"update\");\r\n\t// \t// \treturn true;\r\n\t// \t// } \r\n\t// }\r\n\r\n\t// shouldComponentUpdate(nextProps, nextState) {\r\n\t// \tconsole.log(\"should update\");\r\n\t// }\r\n\r\n\t// static getDerivedStateFromProps(nextProps, prevState) {\r\n\t// \tconsole.log(\"derived\");\r\n\t// \t// if (nextProps.name !== prevState.name) {\r\n\t// \t// \tconsole.log(\"derived\");\r\n\t// \t// \treturn true;\r\n\t// \t// \t// return { name: nextProps.name};\r\n\t// \t// }\r\n\t// \t// else return null;\r\n\t// }\r\n\r\n\t// => This works well\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tif (prevProps.name !== this.props.name) {\r\n\t\t\tlet { name } = this.props;\r\n\t\t\tif (name.length > 0) {\r\n\t\t\t\tlet sorted = this.state.users.filter(user => {\r\n\t\t\t\t\tif (user.name.indexOf(name) === 0) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t} else return false;\r\n\t\t\t\t});\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tsortedUsers: sorted,\r\n\t\t\t\t\tname\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tsortedUsers: []\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (prevProps.users !== this.props.users) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tusers : this.props.users\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t//=> this works well\r\n/*\t\r\n\tshouldComponentUpdate(nextProps, nextState) {\r\n\t\tif (this.state.users !== nextProps.users) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tusers : nextProps.users\r\n\t\t\t});\r\n\t\t\treturn true;\r\n\t\t}\telse return false;\r\n\t}\r\n\r\n\t// => perfectly works\r\n\tstatic getDerivedStateFromProps(nextProps, prevState) {\r\n\t\tif (nextProps.name !== prevState.name) {\r\n\t\t\tconsole.log(this.state);\r\n\t\t\tconsole.log(\"derived\", prevState.name, nextProps.name);\r\n\t\t\treturn { ...prevState, name: nextProps.name };\r\n\t\t}\r\n\t\telse return { prevState };\r\n\t}\r\n*/\r\n\tonRemove = (e) => {\r\n\t\tlet id = e.target.getAttribute('data-id');\r\n\t\tthis.props.deleteUser(parseInt(id));\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"header\">\r\n\t\t\t\t<p>Name : &emsp;<b>{this.state.name ? this.state.name : 'NO NAME'}</b></p>\r\n\r\n\t\t\t\t<div className=\"sorted\">\r\n\t\t\t\t\t<p><b>checker :</b></p>\r\n\t\t\t\t\t<table>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>ID</th>\r\n\t\t\t\t\t\t\t\t<th>Name</th>\r\n\t\t\t\t\t\t\t\t<th>Gender</th>\r\n\t\t\t\t\t\t\t\t<th></th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.state.sortedUsers.length > 0 ?\r\n\t\t\t\t\t\t\t\t\tthis.state.sortedUsers.map((user, i) =>\r\n\t\t\t\t\t\t\t\t\t\t(<tr key={i + 1}>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{user.id}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{user.name}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{user.gender}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td><button className=\"remove-user\" data-id={user.id} onClick={this.onRemove}>Remove</button></td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>)\r\n\t\t\t\t\t\t\t\t\t) :\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td>No data</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>No data</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>No data</td>\r\n\t\t\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t<div className=\"list\">\r\n\t\t\t\t\t<p><b>Users :</b></p>\r\n\t\t\t\t\t<table>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>ID</th>\r\n\t\t\t\t\t\t\t\t<th>Name</th>\r\n\t\t\t\t\t\t\t\t<th>Gender</th>\r\n\t\t\t\t\t\t\t\t<th></th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.state.users.length > 0 ?\r\n\t\t\t\t\t\t\t\t\tthis.state.users.map((user, i) =>\r\n\t\t\t\t\t\t\t\t\t\t(<tr key={i + 1}>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{user.id}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{user.name}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{user.gender}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td><button className=\"remove-user\" data-id={user.id} onClick={this.onRemove}>Remove</button></td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>)\r\n\t\t\t\t\t\t\t\t\t) :\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td>No data</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>No data</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>No data</td>\r\n\t\t\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tusers: state.user_details.users\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tdeleteUser : (id) => dispatch(deleteUser(id)) \r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n\r\n\r\n\r\n\r\n/* Working Model\r\n\r\nimport React from 'react';\r\n//import data from './user.json';\r\n\r\nclass Header extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\t'name': props.name,\r\n\t\t\t'users': [],\r\n\t\t\t'isLoading': false,\r\n\t\t\t'isLoaded': false,\r\n\t\t\t'sortedUsers': []\r\n\t\t};\r\n\t}\r\n\r\n\t// componentDidUpdate(prevProps, prevState) {\r\n\t// \tconsole.log(\"update\");\r\n\t// \t// if (prevProps.name !== this.props.name) {\r\n\t// \t// \tconsole.log(\"update\");\r\n\t// \t// \treturn true;\r\n\t// \t// }\r\n\t// }\r\n\r\n\t// shouldComponentUpdate(nextProps, nextState) {\r\n\t// \tconsole.log(\"should update\");\r\n\t// }\r\n\r\n\t// static getDerivedStateFromProps(nextProps, prevState) {\r\n\t// \tconsole.log(\"derived\");\r\n\t// \t// if (nextProps.name !== prevState.name) {\r\n\t// \t// \tconsole.log(\"derived\");\r\n\t// \t// \treturn true;\r\n\t// \t// \t// return { name: nextProps.name};\r\n\t// \t// }\r\n\t// \t// else return null;\r\n\t// }\r\n\r\n\t// => This works well\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tif (prevProps.name !== this.props.name) {\r\n\t\t\tlet { name } = this.state;\r\n\t\t\tif (name.length > 0) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tisLoading: true\r\n\t\t\t\t});\r\n\t\t\t\tlet sorted = this.state.users.filter(user => {\r\n\t\t\t\t\tif (user.name.indexOf(name) === 0) {\r\n\t\t\t\t\t\tconsole.log(\"list\", user);\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t} else return false;\r\n\t\t\t\t});\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tsortedUsers: sorted,\r\n\t\t\t\t\tisLoading: false\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tsortedUsers: [],\r\n\t\t\t\t\tisLoading: false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// => this works well\r\n\t// shouldComponentUpdate(nextProps, nextState) {\r\n\t// \tif (this.state.name !== nextProps.name) {\r\n\t// \t\tthis.setState({\r\n\t// \t\t\tname : nextProps.name\r\n\t// \t\t});\r\n\t// \t\treturn true;\r\n\t// \t}\telse return false;\r\n\t// }\r\n\r\n\t// => perfectly works\r\n\tstatic getDerivedStateFromProps(nextProps, prevState) {\r\n\t\tif (nextProps.name !== prevState.name) {\r\n\t\t\tconsole.log(\"derived\");\r\n\t\t\treturn { name: nextProps.name };\r\n\t\t}\r\n\t\telse return null;\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tawait fetch('./user.json')\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\t//console.log(data);\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tusers: data.users\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch(error => console.log(error));\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"header\">\r\n\t\t\t\t<p>Name : &emsp;<b>{this.state.name ? this.state.name : 'NO NAME'}</b></p>\r\n\r\n\t\t\t\t<div className=\"sorted\">\r\n\t\t\t\t\t<p><b>checker :</b></p>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state.isLoading === false ?\r\n\t\t\t\t\t\t<table>\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th>ID</th>\r\n\t\t\t\t\t\t\t\t\t<th>Name</th>\r\n\t\t\t\t\t\t\t\t\t<th>Gender</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tthis.state.sortedUsers.length > 0 ?\r\n\t\t\t\t\t\t\t\t\t\tthis.state.sortedUsers.map((user, i) =>\r\n\t\t\t\t\t\t\t\t\t\t\t(<tr key={i + 1}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{user.id}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{user.name}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td>{user.gender}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>)\r\n\t\t\t\t\t\t\t\t\t\t) :\r\n\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>No data</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>No data</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>No data</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</table> :\r\n\t\t\t\t\t\t<p>Loading -------</p>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t<div className=\"list\">\r\n\t\t\t\t\t<p><b>Users :</b></p>\r\n\t\t\t\t\t<table>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>ID</th>\r\n\t\t\t\t\t\t\t\t<th>Name</th>\r\n\t\t\t\t\t\t\t\t<th>Gender</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.state.users.length > 0 ?\r\n\t\t\t\t\t\t\t\t\tthis.state.users.map((user, i) =>\r\n\t\t\t\t\t\t\t\t\t\t(<tr key={i + 1}>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{user.id}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{user.name}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{user.gender}</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>)\r\n\t\t\t\t\t\t\t\t\t) :\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td>No data</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>No data</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>No data</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Header;\r\n\r\n\r\n\r\n\r\n*/","export const addUser = (name, gender) => {\r\n  return {\r\n    type: 'ADD_USER',\r\n    name,\r\n    gender\r\n  }\r\n}\r\n\r\nexport const deleteUser = (id) => {\r\n  return {\r\n    type: 'DELETE_USER',\r\n    id\r\n  }\r\n}\r\n\r\nexport const checkUser = (name) => {\r\n  return {\r\n    type: 'CHECK_USER',\r\n    name\r\n  }\r\n}","import React from 'react';\r\n\r\nimport Header from './Header';\r\n\r\nclass SearchData extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\t'user': ''\r\n\t\t};\r\n\t}\r\n\r\n\tonChangeHandler = (e) => {\r\n\t\tthis.setState({\r\n\t\t\tuser: e.target.value\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"search\">\r\n\t\t\t\t<div className=\"home\">\r\n\t\t\t\t\t<p>Search : </p>\r\n\t\t\t\t\t<div className=\"user\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"user\"\r\n\t\t\t\t\t\t\tonChange={this.onChangeHandler}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Header\r\n\t\t\t\t\t\tname={this.state.user}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SearchData;\r\n","import React from 'react';\r\nimport SearchData from './components/SearchData';\r\nimport { connect } from 'react-redux';\r\nimport { addUser } from './actions/action';\r\n\r\nimport './styles/main.css';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      'toggled': true,\r\n      'AddUserToggle': true,\r\n      'formdata': {\r\n        'username': '',\r\n        'gender': ''\r\n      },\r\n      'users': props.users ? props.users : []\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n\t\tif (nextProps.users !== prevState.users) {\r\n\t\t\tconsole.log(\"derived\");\r\n\t\t\treturn { users : nextProps.users };\r\n\t\t}\r\n\t\telse return null;\r\n\t}\r\n\r\n  // componentDidUpdate(prevState) {\r\n  //   if (this.state.users !== prevState.users) {\r\n  //     let users = JSON.stringify(this.state.users);\r\n  //     console.log(\"changes\", this.state.users);\r\n  //   }\r\n  //   console.log(\"updated\", this.state);\r\n  // }\r\n\r\n  onChangeHandler = (e) => {\r\n    this.setState({\r\n      user: e.target.value\r\n    });\r\n  }\r\n\r\n  toggleSearch = () => {\r\n    this.setState((prevState) => ({\r\n      toggled: !prevState.toggled\r\n    }));\r\n  }\r\n\r\n  toggleAddUser = () => {\r\n    this.setState((prevState) => ({\r\n      AddUserToggle: !prevState.AddUserToggle\r\n    }));\r\n  }\r\n\r\n  formSubmit = (e) => {\r\n    e.preventDefault();\r\n    let { username } = this.state.formdata;\r\n    let { gender } = this.state.formdata;\r\n    if (username !== '' && gender !== '') {\r\n      this.props.addUser(username, gender);\r\n    }\r\n  }\r\n\r\n  inputChange = (e) => {\r\n    this.setState({\r\n      ...this.state,\r\n      formdata: {\r\n        ...this.state.formdata,\r\n        username: e.target.value\r\n      }\r\n    });\r\n  }\r\n\r\n  // async componentDidMount() {\r\n  //   let data = await localStorage.getItem('users') ? localStorage.getItem('users') : [];\r\n  //   let users = JSON.parse(data);\r\n  //   this.setState({\r\n  //     users\r\n  //   });\r\n  // }\r\n\r\n  selectChange = (e) => {\r\n    this.setState({\r\n      ...this.state,\r\n      formdata: {\r\n        ...this.state.formdata,\r\n        gender: e.target.value\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    console.log('app', this.state.users);\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"container row\">\r\n          <div className=\"row-child\">\r\n          {\r\n            this.state.AddUserToggle &&\r\n            <div className=\"user-form\">\r\n              <h3>Add User</h3>\r\n              <form onSubmit={this.formSubmit}>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"username\"\r\n                  onChange={this.inputChange}\r\n                  required\r\n                />\r\n                <select required\r\n                  onChange={this.selectChange}\r\n                >\r\n                  <option value=\"\">None</option>\r\n                  <option value=\"Male\">Male</option>\r\n                  <option value=\"Female\">Female</option>\r\n                </select>\r\n                <button>Add User</button>\r\n              </form>\r\n            </div>\r\n          }\r\n          </div>\r\n          <div className=\"row-child\">\r\n          {\r\n            this.state.toggled &&\r\n            <SearchData />\r\n          }\r\n          </div>\r\n          <div className=\"top-btn\">\r\n            <button onClick={this.toggleAddUser}>{this.state.AddUserToggle === true ? 'Hide' : 'Add user'}</button>\r\n          </div>\r\n          <div className=\"bottom-btn\">\r\n            <button onClick={this.toggleSearch}>{this.state.toggled === true ? 'Hide Searching' : 'View Searching'}</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    users: state.user_details.users\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addUser: (name, gender) => dispatch(addUser(name, gender))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initialState = {\r\n  users: [],\r\n  added_count: 0,\r\n  filters: {\r\n    userChecked: false,\r\n    usersSorted: []\r\n  }\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_USER':\r\n      let user = {\r\n        \"id\": state.added_count + 1,\r\n        \"name\": action.name,\r\n        \"gender\": action.gender\r\n      }\r\n      return {\r\n        ...state,\r\n        added_count: state.added_count + 1,\r\n        users: state.users.concat([user])\r\n      }\r\n\r\n    case 'CHECK_USER':\r\n      let { users } = state;\r\n      let checker = false;\r\n      for (let i = 0; i < users.length; i++) {\r\n        if (users[i].name === action.name) {\r\n          checker = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        filters: {\r\n          ...state.filters,\r\n          userChecked: checker\r\n        }\r\n      }\r\n\r\n    case 'DELETE_USER':\r\n      let sampleUsers = state.users.filter((user) => {\r\n        if (user.id !== action.id) {\r\n          return true;\r\n        } else return false\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        users: sampleUsers\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\n\r\n\r\nimport configStore from './store/configStore';\r\n\r\nconst store = configStore();\r\n\r\nstore.subscribe(() => console.log(store.getState()));\r\n\r\nconst Main = () => (\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(<Main />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { createStore, combineReducers } from 'redux';\r\n\r\nimport userReducer from '../reducers/userReducer';\r\n\r\nexport default () => {\r\n  const store = createStore(combineReducers({\r\n    user_details: userReducer\r\n    // filterUser: filterReducer\r\n  }));\r\n\r\n  return store;\r\n};\r\n"],"sourceRoot":""}